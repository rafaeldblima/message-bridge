services:
  rabbitmq-source:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-source
    hostname: rabbitmq-source
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_source_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - message-bridge-network

  rabbitmq-destination:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-destination
    hostname: rabbitmq-destination
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_destination_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - message-bridge-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:29092 --list
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - message-bridge-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - message-bridge-network

#  message-bridge-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: message-bridge-service
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    depends_on:
#      rabbitmq-source:
#        condition: service_healthy
#      rabbitmq-destination:
#        condition: service_healthy
#    networks:
#      - message-bridge-network
#    restart: unless-stopped

  message-publisher:
    build:
      context: ./tools/message-publisher
      dockerfile: Dockerfile
    container_name: message-publisher
    environment:
      RABBITMQ_HOST: rabbitmq-source
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_VHOST: /
      PUBLISHER_NAME: "Source Publisher"
    depends_on:
      rabbitmq-source:
        condition: service_healthy
    networks:
      - message-bridge-network
    profiles:
      - tools

volumes:
  rabbitmq_source_data:
  rabbitmq_destination_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:

networks:
  message-bridge-network:
    driver: bridge